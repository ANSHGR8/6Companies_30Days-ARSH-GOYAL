class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
         return atMostK(nums, k) - atMostK(nums, k - 1);
    }
    private:
    int atMostK(const std::vector<int>& nums, int k) {
        int count = 0, oddCount = 0, left = 0;

        for (int right = 0; right < nums.size(); ++right) {
            if (nums[right] % 2 == 1) {
                oddCount++;
            }

            while (oddCount > k) {
                if (nums[left] % 2 == 1) {
                    oddCount--;
                }
                left++;
            }

            count += right - left + 1;
        }

        return count;
    }
};
