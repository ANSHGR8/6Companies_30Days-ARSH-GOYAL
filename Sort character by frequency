class Solution {
public:
    string frequencySort(string s) {
        std::unordered_map<char, int> charCount;

        // Count the frequency of each character
        for (char c : s) {
            charCount[c]++;
        }

        // Create a vector of pairs (character, frequency)
        std::vector<std::pair<char, int>> charFrequency(charCount.begin(), charCount.end());

        // Sort the vector based on frequency in descending order
        std::sort(charFrequency.begin(), charFrequency.end(), [](const auto& a, const auto& b) {
            return a.second > b.second;
        });

        // Build the sorted string
        std::string result;
        for (const auto& entry : charFrequency) {
            result += std::string(entry.second, entry.first);
        }

        return result;
    }
};
